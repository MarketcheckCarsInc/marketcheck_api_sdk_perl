=begin comment

Marketcheck Cars API

<b>Access the New, Used and Certified cars inventories for all Car Dealers in US.</b> <br/>The data is sourced from online listings by over 44,000 Car dealers in US. At any time, there are about 6.2M searchable listings (about 1.9M unique VINs) for Used & Certified cars and about 6.6M (about 3.9M unique VINs) New Car listings from all over US. We use this API at the back for our website <a href='https://www.marketcheck.com' target='_blank'>www.marketcheck.com</a> and our Android and iOS mobile apps too.<br/><h5> Few useful links : </h5><ul><li>A quick view of the API and the use cases is depicated <a href='https://portals.marketcheck.com/mcapi/' target='_blank'>here</a></li><li>The Postman collection with various usages of the API is shared here https://www.getpostman.com/collections/2752684ff636cdd7bac2</li></ul>

OpenAPI spec version: 1.0.3

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end comment

=cut

#
# NOTE: This class is auto generated by the swagger code generator program. 
# Do not edit the class manually.
# Ref: https://github.com/swagger-api/swagger-codegen
#
package marketcheck_api_sdk_perl::CRMApi;

require 5.6.0;
use strict;
use warnings;
use utf8; 
use Exporter;
use Carp qw( croak );
use Log::Any qw($log);

use marketcheck_api_sdk_perl::ApiClient;

use base "Class::Data::Inheritable";

__PACKAGE__->mk_classdata('method_documentation' => {});

sub new {
    my $class = shift;
    my $api_client;

    if ($_[0] && ref $_[0] && ref $_[0] eq 'marketcheck_api_sdk_perl::ApiClient' ) {
        $api_client = $_[0];
    } else {
        $api_client = marketcheck_api_sdk_perl::ApiClient->new(@_);
    }

    bless { api_client => $api_client }, $class;

}


#
# crm_check
#
# CRM check of a particular vin
# 
# @param string $vin vin for which CRM check needs to be done (required)
# @param string $sale_date sale date after which listing has appeared or not (required)
# @param string $api_key The API Authentication Key. Mandatory with all API calls. (optional)
{
    my $params = {
    'vin' => {
        data_type => 'string',
        description => 'vin for which CRM check needs to be done',
        required => '1',
    },
    'sale_date' => {
        data_type => 'string',
        description => 'sale date after which listing has appeared or not',
        required => '1',
    },
    'api_key' => {
        data_type => 'string',
        description => 'The API Authentication Key. Mandatory with all API calls.',
        required => '0',
    },
    };
    __PACKAGE__->method_documentation->{ 'crm_check' } = { 
    	summary => 'CRM check of a particular vin',
        params => $params,
        returns => 'CRMResponse',
        };
}
# @return CRMResponse
#
sub crm_check {
    my ($self, %args) = @_;

    # verify the required parameter 'vin' is set
    unless (exists $args{'vin'}) {
      croak("Missing the required parameter 'vin' when calling crm_check");
    }

    # verify the required parameter 'sale_date' is set
    unless (exists $args{'sale_date'}) {
      croak("Missing the required parameter 'sale_date' when calling crm_check");
    }

    # parse inputs
    my $_resource_path = '/crm_check/{vin}';

    my $_method = 'GET';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/json');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type();

    # query params
    if ( exists $args{'api_key'}) {
        $query_params->{'api_key'} = $self->{api_client}->to_query_value($args{'api_key'});
    }

    # query params
    if ( exists $args{'sale_date'}) {
        $query_params->{'sale_date'} = $self->{api_client}->to_query_value($args{'sale_date'});
    }

    # path params
    if ( exists $args{'vin'}) {
        my $_base_variable = "{" . "vin" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'vin'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    my $_body_data;
    # authentication setting, if any
    my $auth_settings = [qw()];

    # make the API Call
    my $response = $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    if (!$response) {
        return;
    }
    my $_response_object = $self->{api_client}->deserialize('CRMResponse', $response);
    return $_response_object;
}

1;
